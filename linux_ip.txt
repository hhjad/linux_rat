

///////////////////////////////Tbet1
import pandas as pd
import numpy as np
x = 0
tx = ""
teme = 2024
def Tbet1_hot(ma,x,choose,tx):#ma:普通下注数字 ，X:下注期数或表格中的第几行， tema:特码下注数字choose：，普通下注数字位数 path:测试路径
 
    c  = 0
    
    te = [3,4,18,19]
    #判断参数是否符合规范
    if ma and choose:
        tex = 0
#     else:
#         if tema :
#             tex = 1
    else: 
        tex = 2
        print("参数填写错误")
        return False
    #判断是否超出期数范围               
    if x<=14635:
        re = tx.iloc[x,11]                       
    else:
        print("x参数不在范围（0-14635）")
        return False 
    #特码模式对否
#     if tema == te and tex == 1:
#         print("特码下注模式启动")
#         if re in te:
#             print("WIN!!!!!!")
#             return True
#         else:
#             print("Miss.")
#             return False
    #普通模式输赢
    if tex == 0 :
        print("普通下注模式")
        for y in choose:
            mac = tx.iloc[x,y]
            if ma == mac:
                print("WIN!!!!!!")
                c = 1
                break
                
    if c == 1:
        return True
    else:
        return False


//////////////////////////////////////////////Descover
import pandas as pd
import numpy as np
dx = pd.read_excel('betbigC.xlsx',sheet_name='Sheet1',header=None)
ax = pd.read_excel('wz1.xlsx',sheet_name='Sheet1',header=None)
#什么后面容易跟numb统计
#标准模板：betbigC.xlsx*******startc要大于bout,start为当前要模拟结果的前一期
def discover_front(start,numb,bout,method,ranking):#method是方法种类----method=1时采用检测前bout期中numb后出现最多的前ranking名的数字
    x = 0
    y = 1
    List = []
    i = 0
    p = 0
    l = 0
    u = 0
    m = 0
    listG = []
    while bout>0:
        
        
        
        while x <=9:#找出开始期数的开奖号码为startList
                m = dx.iloc[start-i,x+2]
    
                List.insert(x, m) 
                x = x +1
                print(List)
                
                
        i = i+1 
        if  u==9 :#排除第一期外，纪录数值到ListG中
            num = List[p]
            listG[m] = num
            m = m+1
            if m >  bout:
                m = 0         
        for c in List:
            if c == numb:
                u= 9                
                break
            p = p+1
            u = 9
           
            
    g = listG.sort()
    
    
    return g    
            
            
            
///////////////////////////////////////////////////Descoves2
import pandas as pd
import numpy as np
from study.Descover import discover_front
dx = pd.read_excel('betbigC.xlsx',sheet_name='Sheet1',header=None)
ax = pd.read_excel('wz1.xlsx',sheet_name='Sheet1',header=None)
x = 0
y = 1
List = []
i = 0
p = 0
l = 0
u = 0
m = 1
listP = []
listG=[]

start = 16
bout = 15
numb = 1
ppu = 0

while bout>0:
        
        
        
    while x <=9:#找出开始期数的开奖号码为startList
        m = dx.iloc[start-i,x+2]
    
        List.insert(x, m) 
        x = x +1
        if x ==10:
            print("List:",List)
                
                
    i = i+1
    x = 0
     
    if  u==9 :#排除第一期外，纪录数值到ListG中
        num = List[p]
        
        print("p =",p)
        print("num = ",num)
        
        listP.insert(ppu, p)
        listG.insert(ppu, num)
        ppu = ppu+1
        #listG[m] = num
    p = 0           
    for c in List:
        if c == numb:
            u = 9                
            break
        p = p+1
        u = 9
           
    bout = bout-1
    List = []         
#     g = listG.sort()
#     print(g)
#

ace = pd.value_counts(listG)
act = pd.value_counts(listP)
print("ace -------",ace)

print("ace -------",act)
 



/////////////////////////////////////////////////////////////////////huatu
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# 设置中文和负号正常显示
plt.figure(figsize=(10,10))
plt.figure(dpi=1080)
plt.rcParams['font.sans-serif'] = 'Microsoft YaHei'
plt.rcParams['axes.unicode_minus'] = False
rd = pd.read_excel('TS1.xlsx',sheet_name='Sheet1',header=None)
pz = []
sz = []
i = 0
x =1
y = 1
o=1.0
c = 0
b = 0
while x <= 1055:
    
    nub = rd.iloc[x,y]
    
    sz.insert(i, nub)
    
    y = y+1
    i = i +1
    if y == 11:
       y = 1
       x = x+1

print(len(sz))
i = 0
while o<1056:
    
    
    o = round(o,1)
    pz.insert(i,o)
    i = i+1
    o = o+0.1
print(len(pz))
print(sz[0:10])
print(pz[0:10])

plt.plot(pz, sz, color='#FF0000', label='期望收益', linewidth=0.3)    
# for a in pz:
#     b = sz[c] 
#     plt.text(a, b, s = b,ha='center', va= 'bottom',fontdict=18)
#     c = c+1
plt.hlines(0, 0, 1056, colors = "#000000", linestyles = "dashed")
plt.xlabel(u'期数', fontsize=18)
plt.ylabel(u'收益', fontsize=18)
plt.legend(fontsize=18)

plt.savefig('outputdpi5.svg', format='svg')  




///////////////////////////////////////////////////////////////lianxiao
import pandas as pd
import numpy as np 
import openpyxl
import xlwt
import os
from test.test_funcattrs import cell
from builtins import str, int
from _operator import index



   #sa1
x = 1
y = 1
i = 1
x1 = 1
y1 = 1

#读取表格创建为对象df->betbigS.xlsx,sf->betbigG.xlsx
df = pd.read_excel("text.xlsx",sheet_name='Sheet1',header=None)
sf = pd.read_excel("BGTX.xlsx",sheet_name='Sheet1',header=None)

#xg = df.iloc[x,y]
#xg =str(xg)
#xg = xg+1
#print(sf.iloc[x1,y1])
#sf.iloc[x1,y1] = xg
# 
#print(xg)


# 
#sg = sf.iloc[x1,y1]
# 
#print(xg)
#result = df.iloc[5,12]
#result = df.iloc[1,1]
#print(result)

# 循环读取df第3列转化为sf第一行
while x < 14001:
    xg = df.iloc[x,y]
    print(xg)
      
      
        
    #print(xgc)
    sf.iloc[x1,y1] = xg
    y1 = y1+1
        
#     cd = sf.iloc[x1,y1]
     #print(cd)
    if i == 180:
        i = 0
        x1 =x1+1
        y1 = 1
        
        
           
                
    x = x+1
      
    i = i+1
    print("正在执行第",x,"次......")
        
      
      
print("执行完成！！！")
print("保存中....")
sf.to_excel('BGTX.xlsx')
print("执行完成请查收")



//////////////////////////////////////////////////////////////////////////////////teste
import pandas as pd
import numpy as np
from study.Descover import discover_front
dx = pd.read_excel('betbigC.xlsx',sheet_name='Sheet1',header=None)
ax = pd.read_excel('wz1.xlsx',sheet_name='Sheet1',header=None)
x = 0
y = 1
List = []
i = 0
p = 0
l = 0
u = 0
m = 1
listG = ['结果：']
start = 16
bout = 15
numb = 1

while bout>0:
        
        
        
    while x <=9:#找出开始期数的开奖号码为startList
        m = dx.iloc[start-i,x+2]
    
        List.insert(x, m) 
        x = x +1
        if x ==10:
            print("List:",List)
                
                
    i = i+1
    x = 0
     
    if  u==9 :#排除第一期外，纪录数值到ListG中
        num = List[p]
        print("p =",p)
        print("num = ",num)
        #listG[m] = num
    p = 0           
    for c in List:
        if c == numb:
            u = 9                
            break
        p = p+1
        u = 9
           
    bout = bout-1
    List = []         
#     g = listG.sort()
#     print(g)
#  
 
 /////////////////////////////////////////////////////////////////////////////////////text86
import pandas as pd
import numpy as np
from study.Tbet1 import Tbet1_hot


o = 0
l = 0
d = 0
s = 0
b = 0
c =0
e = 0
ax = pd.read_excel('text.xlsx',sheet_name='Sheet1',header=None)

while b<= 10000:
            
    a = Tbet1_hot(ma=5,x=b,choose=[1,2,3,4,5],tx=ax)
    
    if a:
        s = s+1
        e = e+1
        c = 0
    else:
        d = d+1
        c = c+1
        e = 0        
    b = b+1
    
    if o<e:
        o = e
    else:
        uuu = 1
       
    if l<c:
        l = c
    else:
        uuu = 1
        
    if o == 18:
        print(ax)
        break
    
        
      
      
print("共测试",b,"次")
print("共失败",d,"次")
print("共成功",s,"次")
print("成功率",s/b)
print("最大连续失败",o,"次")
print("最大连续成功",l,"次")

/////////////////////////////////////////////////////////////////////TGL
import pandas as pd
import numpy as np
from study.Tbet1 import Tbet1_hot


rd = pd.read_excel('betbigG58.xlsx',sheet_name='Sheet1',header=None)
er = pd.read_excel('TGL.xlsx',sheet_name='Sheet1',header=None)
DT = [3,4,18,19]
n = 1
y = 16
x = 0
j =1
k =1
z = 1
while y<=181:
#     
    array = rd.iloc[n,y-15:y]
    for a in array:
        if a in DT:
            x =x+1
    er.iloc[j,k] = x
    
    
    y = y+1
    x = 0
    k = k+1
    if y>181:
        y = 16
        n = n+1
        k = 1
        j = j+1
    if n >1055:
        break
print("执行完成！！！")
print("保存中....")
er.to_excel('TGL.xlsx')
print("执行完成请查收")        
#     for a in DT:
#         if array == a:
#             x=x+1
# print(array)
# print(x)            
            
    ////////////////////////////////////////////////////////////////////////////////////////TGL2
import pandas as pd
import numpy as np

er = pd.read_excel('TGL.xlsx',sheet_name='Sheet1',header=None)
c = 0
i = 0
x = 1
y = 1
#遍历文件，把1-166连续下注15期大特胜率计算出来
while y <= 166:
    a = er.iloc[x,y]
    if a > 0:
        c = c+1
    else:
        i = i+1
    x = x+1
    if x ==1056:
        er.iloc[1056,y] = c#15期下注大特命中数
        er.iloc[1057,y] = 1055-c#15期下注大特未命中数
        er.iloc[1058,y] = c/1055 #15期下注大特胜率
        c = 0
        i = 0
        y = y+1
        x = 1


print("执行完成！！！")
print("保存中....")
er.to_excel('TGL1213.xlsx')
print("执行完成请查收")


//////////////////////////////////////////////////////////////////////////////////////tongji
import pandas as pd
import numpy as np 
import openpyxl
import xlwt
from collections import Counter
from builtins import list





df = pd.read_excel("betbigG58.xlsx",sheet_name='Sheet1',header=None)
cf = pd.read_excel("总计.xlsx",sheet_name='Sheet1',header=None)


#设置初始值

x = 1
y = 1
x0 = 1
y0 = 0
i = 1
a = 1
dt = df.iloc[x,y]
sum = 0
ct = 0
b = 1
k = 0
pim = 0#平均数
sim = 0#小数次
big = 0#大数次
dati = 0#大特次
xaoti = 0#小特次
datiGL = 0#大特概率
xaotiGL =0#小特概率
sGL = 0#双概率
dGL = 0#单概率
dsit = 0#单数次
ssit = 0#双数次
sitmax = 0#最多数
sitmin = 0#最小数
maxsit = 0#最多数次
minsit = 0#最少数次

#print(dt)
#计算每期总数


# 一列一列获取数据统计出现次数结果
list = [3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]


while y<=180:
    y0 = y0+1
    col = df.iloc[1:1056,y:y+1]#获取1-1056行，y-y+1列数据到col对象中
    
    print("正在执行第",y,"行")
    
    
    c = col.apply(pd.value_counts)#统计各个数据出现的次数
    
    
    print(c)
    maxsit = c.iloc[0,0]
    minsit = c.iloc[16,0]
    print(maxsit,minsit)
    for k in list:
        
        print("k = ",k)
        a = c.loc[k,y]#c已统计出来，以对象形式。此行代码为访问C统计中的数字k的出现次数赋值给a
#         if a>minsit:#最多次数
#             minsit = a
#         if a<maxsit:#最少次数
#             maxsit = a
        
        print("a = ",a,"k = ",k)
        sum = sum+k*a
       
        
        #判断单双
        if k%2==0:
            ssit = a +ssit
        else:
            dsit = dsit+a
        #判断大特
        if k <5 or k>17:
            dati = dati+a
        #判断大小
        if k< 12:
            sim = sim+a
        else:
            big = big+a
        if  a == maxsit:
            sitmax = k   
        if  a == minsit:
            sitmin = k    
    pim = sum/1055       
    sGL =ssit/1055
    dGL =dsit/1055
    datiGL = dati/1055
    simGL = sim/1055
    bigGL = big/1055
    f = [sum,pim,dati,datiGL,dsit,ssit,dGL,sGL,big,sim,bigGL,simGL,sitmax,maxsit,sitmin,minsit]
    sum = 0
    x0 = 1
    for i in f:#一列一列打印
        print(i,x0,y0)
        cf.iloc[x0,y0] = i
        x0 = x0+1
        print("正在打印.........")
    y = y+1
    pim = 0#平均数
    sim = 0#小数次
    big = 0#大数次
    dati = 0#大特次
    xaoti = 0#小特次
    datiGL = 0#大特概率
    xaotiGL =0#小特概率
    sGL = 0#双概率
    dGL = 0#单概率
    dsit = 0#单数次
    ssit = 0#双数次
    sitmax = 0#最多数
    sitmin = 0#最小数
    maxsit = 0#最多数次
    minsit = 0#最少数次   
print("打印完成！！！")
print("保存中....")
cf.to_excel('总计.xlsx')
print("执行完成请查收")   
        
    
            
    
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////TS1
import pandas as pd
import numpy as np

#导入dx标准文件参考betbig58，导出参考TS系列
dx = pd.read_excel('BGTX.xlsx',sheet_name='Sheet1',header=None)
ax = pd.read_excel('TS2.xlsx',sheet_name='Sheet1',header=None)
list = [22,58,63,69,72,113,119,135,137,159]#期数列表
a = 1
x = 1
i = 1
DT = [3,4,18,19]#大特列表
hit = 0#命中总次数
miss= 0#未命中总次数
s = 0
income = 0 #收益
expenditure = [8,8,8,16,16,24,32,36,40,44]#支出表
expenditureDuble=[16,16,16,32,32,48,64,72,80,88]
expense = 0#支出
h = 0#连续命中情况
m = 0#连续未命中情况
x0 = 1
y0 = 1
o = 0
l = 0
e = 0
uui=0

while x <= 76:
    for y in list:
        b = dx.iloc[x,y] 
        
        if y == 159:
            x = x+1
        else:
            a = 0
  
 
        #获取支出表，按支出表投资
       
        j = expenditureDuble[o]
        print(b)
        if b in DT:
            
            income = j*9.5#命中
            
            hit = hit+1
            h =h+1
            m = 0
            o = 0
            #print("h = ",h)
        else:
            m = m+1
            h = 0
            income = -j
            uui = uui + 1
            o = o+1
            #print("uui = ",uui)
   
        #print("income=",income)
        s = income+s
        #print("s =",s)
        
        
        if h>l:    
            l = h#最大连续命中
        if  m>e: 
            e = m      #最大连续未命中
        
        
        if o >=9:
            o = 0       
        ax.iloc[x0,y0] = s
        y0 = y0+1
        if y0==11:
            y0 = 1          
            x0 = x0+1    
print(s)              
print("hit,m:",hit,m)             
print("最大连续未命中:",e)
print("最大连续命中:",l)            
print("执行完成！！！")
print("保存中....")
ax.to_excel('TS1.xlsx')
print("执行完成请查收")            
      



////////////////////////////////////////////////////////////////////////////////////////////////////////////TS2
import pandas as pd
import numpy as np
dx = pd.read_excel('text.xlsx',sheet_name='Sheet1',header=None)
ax = pd.read_excel('TS2.xlsx',sheet_name='Sheet1',header=None)
list = [22,58,63,69,72,113,119,135,137,159]#期数列表
a = 1
x = 1
i = 1
DT = [3,4,18,19]#大特列表
hit = 0#命中总次数
miss= 0#未命中总次数
s = 0
income = 0 #收益
expenditure = [8,8,8,16,16,24,32,36,40,44]#支出表
expenditureDuble=[16,16,16,32,32,48,64,72,80,88]
expense = 0#支出
h = 0#连续命中情况
m = 0#连续未命中情况
x0 = 1
y0 = 1
o = 0
l = 0
e = 0
uui=0

while x <= 1055:
    for y in list:
        b = dx.iloc[x,y] 
        
        if y == 159:
            x = x+1
        else:
            a = 0
  
 
        #获取支出表，按支出表投资
       
        j = expenditureDuble[o]
        print(b)
        if b in DT:
            
            income = j*9.5#命中
            
            hit = hit+1
            h =h+1
            m = 0
            o = 0
            #print("h = ",h)
        else:
            m = m+1
            h = 0
            income = -j
            uui = uui + 1
            o = o+1
            #print("uui = ",uui)
   
        #print("income=",income)
        s = income+s
        #print("s =",s)
        
        
        if h>l:    
            l = h#最大连续命中
        if  m>e: 
            e = m      #最大连续未命中
        
        
        if o >=9:
            o = 0       
        ax.iloc[x0,y0] = s
        print(s)
        y0 = y0+1
        if y0==11:
            y0 = 1          
            x0 = x0+1    
              
print("hit,m:",hit,m)             
print("最大连续未命中:",e)
print("最大连续命中:",l)            
print("执行完成！！！")
print("保存中....")
ax.to_excel('TS1.xlsx')
print("执行完成请查收")            
      
/////////////////////////////////////////////////////////////////////////////////////Toptwo
import pandas as pd
import numpy as np
dx = pd.read_excel('betbigC.xlsx',sheet_name='Sheet1',header=None)
ax = pd.read_excel('wz1.xlsx',sheet_name='Sheet1',header=None)
#mx = pd.read_excel('wz2.xlsx',sheet_name='Sheet1',header=None)
#前两名位置运算，适合大特
x = 1
y = 2
y0 = 3
    
x1 = 1
y1 = 1
i = 1
z = 0
zhjg = 0
date = [3,4,18,19]
betdate = [16,16,16,32,32,48,64,72,80,88]
while x<189999:    
    
    m1 = dx.iloc[x,y]
    m2 = dx.iloc[x,y0]
    y = y+1
    if y == 3:
        y = 2
    
    x = x + 1
    if m1 in[10,1] and m2 in [10,1]:
        while i <=4:
            l1 = dx.iloc[x+i,y]
            l2 = dx.iloc[x+i,y0]
            i = i+1
            list = [l1,l2]
            if 1 or 10 in list:
                if l1+l2 not in date:
                    z = z + 1
        if z == 3:
            for u in betdate:
                l1 = dx.iloc[x+i,y]
                l2 = dx.iloc[x+i,y0]
                i = i+1
                if l1+l2 in date:
                    jg = 9.5*u
                else:
                    jg = -u
                        
                zhjg = zhjg+jg
                ax.iloc[x1,y1] = zhjg
                print(zhjg)
                if y1 == 10:
                    x1 = x1+1
                    y1 = 1         
                           
                     
ax.to_excel('wz1.xlsx')
print("结束")              


    



                
                
        
        
        
    







